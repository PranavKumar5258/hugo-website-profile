<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>blog on My New Hugo Site</title>
    <link>http://example.org/tags/blog/</link>
    <description>Recent content in blog on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 14 Aug 2020 13:30:29 +0530</lastBuildDate>
    
	<atom:link href="http://example.org/tags/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Making a Verlet Physics Engine in Javascript</title>
      <link>http://example.org/fivth/</link>
      <pubDate>Fri, 14 Aug 2020 13:30:29 +0530</pubDate>
      
      <guid>http://example.org/fivth/</guid>
      <description>Have you ever wondered if you can make your own physics engine in JavaScript? If so, you have come to the right place. We are going to build a Physics engine from scratch in JavaScript.
Before we start, I should mention that this tutorial assumes you have a good understanding of Vectors. Don’t worry if you do not yet have this understanding — Vectors are simple: get the Vector.js.
What Is Verlet Physics?</description>
    </item>
    
    <item>
      <title>Making a Verlet Physics Engine in Javascript</title>
      <link>http://example.org/fourth/</link>
      <pubDate>Fri, 14 Aug 2020 13:22:10 +0530</pubDate>
      
      <guid>http://example.org/fourth/</guid>
      <description>Have you ever wondered if you can make your own physics engine in JavaScript? If so, you have come to the right place. We are going to build a Physics engine from scratch in JavaScript.
Before we start, I should mention that this tutorial assumes you have a good understanding of Vectors. Don’t worry if you do not yet have this understanding — Vectors are simple: get the Vector.js.
What Is Verlet Physics?</description>
    </item>
    
    <item>
      <title>Making a Verlet Physics Engine in Javascript</title>
      <link>http://example.org/third/</link>
      <pubDate>Fri, 14 Aug 2020 13:22:10 +0530</pubDate>
      
      <guid>http://example.org/third/</guid>
      <description>Have you ever wondered if you can make your own physics engine in JavaScript? If so, you have come to the right place. We are going to build a Physics engine from scratch in JavaScript.
Before we start, I should mention that this tutorial assumes you have a good understanding of Vectors. Don’t worry if you do not yet have this understanding — Vectors are simple: get the Vector.js.
What Is Verlet Physics?</description>
    </item>
    
    <item>
      <title>How to make a hugo theme</title>
      <link>http://example.org/second/</link>
      <pubDate>Fri, 14 Aug 2020 13:11:45 +0530</pubDate>
      
      <guid>http://example.org/second/</guid>
      <description>Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description>
    </item>
    
    <item>
      <title>Making a Verlet Physics Engine in Javascript</title>
      <link>http://example.org/markdown/</link>
      <pubDate>Tue, 11 Aug 2020 23:03:58 +0530</pubDate>
      
      <guid>http://example.org/markdown/</guid>
      <description>Have you ever wondered if you can make your own physics engine in JavaScript? If so, you have come to the right place. We are going to build a Physics engine from scratch in JavaScript.
Before we start, I should mention that this tutorial assumes you have a good understanding of Vectors. Don’t worry if you do not yet have this understanding — Vectors are simple: get the Vector.js.
What Is Verlet Physics?</description>
    </item>
    
  </channel>
</rss>